name: Server 
 
on:
  push:
    branches:
      - main
 
jobs:
  integration:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
 
    steps:
      - name: "Obteniendo ultima version del codigo"
        uses: actions/checkout@v3
 
      - name: "Instalacion Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
 
      - name: "Compilacion"
        run: ./mvnw clean install
 
      - name: "Verificar paquete"
        run: ls -ltra target
 
      - name: "Imagen Docker"
        run: |
          docker build -f Dockerfile . -t webgoat/test
          docker images
 
      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MONTSE_ACCESS_KEY}}
          aws-secret-access-key: ${{ secrets.MONTSE_SECRET_KEY }}
          aws-region: us-east-2
      
      - name: "Cargar imagen ECR"
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/n3j7o1e0
          docker tag webgoat/test:latest public.ecr.aws/n3j7o1e0/montse_server:latest
          docker push public.ecr.aws/n3j7o1e0/montse_server:latest
      
      - name: "Aprovisionamiento terraform"
        run: |
          cd terraform
          terraform init
          terraform validate 
          terraform plan -out tfplan
          terraform apply tfplan >> results_tfplan.txt
          ip_webgoat=$(cat results_tfplan.txt | grep "My_ip = " | awk '{ print $3}' | sed 's/"//g')
          sed -i "s/IP/$ip_webgoat/g" ../ansible/inventario
        
     - name: "Ansible"
        env:
          PRIVATE_KEY: ${{ secrets.MONTSE_PEM }}
        run: |
          sudo apt update
          sudo apt install -y ansible
          cd terraform
          echo "$PRIVATE_KEY" >> $HOME/key.pem
          sudo chmod 600 $HOME/key.pem
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook -i inventario server.yaml --become --private_key $HOME/key.pem
        continue-on-error: true
        
      - name: "Destruir infraestructura"
        run: |
          cd terraform
          terraform plan -destroy -out tfplan
          terraform apply tfplan